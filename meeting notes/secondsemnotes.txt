Meeting 15/02/2024 notes
----------------------------
- asked about vec3 c# to glm conversion, should work fine
- was showed a video about interpolating character position and have the cloth move on its own
- need to do a bit more 

meeting 22/02/2024 notes
------------------------------
pass static particles from c# as vector of particle indices, so we can set from c#
dont pass grid size cause it wont work with other things, do triangles, e.g. rework whole thing to not use grid_size, mgiht be hard but needed
create click and drag feature

Meeting 29/02/2024 notes
-------------------------------
shared all my stuff on screen and showed the new features like shear constraints, stiffness slider and all the new functions (triangles instead of grid size)
looks good
- Babis suggested a cool way of doing a more realistic wind with 3d perlin noise using the x and y of vertex to make the wind point different directions. He noted that since i already have working wind its better to focus on the more urgent things
- He also suggested an unordered set for constraints as its a little faster but since I add it to a vector anyway it isn't that important. 
- I asked about a section of the paper where it states that they had to also use collision checking with rigid bodies in case they fall through the triangles but this isn't applicable to this project as the collision checking will only happen with a big sphere on scenario2, so just the cloth collision is required.
- I asked about his thoughts on priority tasks and it seems the next steps are:
XPBD -> Bend constraints if i can do it in an hour-ish -> fix mouseLocation bug with the drag feature -> get the collision stuff working
- He recommended for me to use debug and breakpoints for the dll, not sure why i wasn't doing that in the first place tbh

MEETIng 07/03/2024
--------------------------
showed xpbd demo, looks a bit better/stable than pbd on correct settings, 10 substeps
explained that my shear constraints work fine as bending constraints and that actual angle bending constraints are harder to implement
Babis recommended me to look into a recording script that records X amounts of fixed updates with same vertex setup and only changing parameters like stiffness/iterations.
will make it easier to review and analyse, think this is quite high priority.
- Babis also explained that instead of needing to do _vector.clear() on init, i can have my cloth object be g_ClothSim = {}; and it would overwrite it every time its ran. Would be a tiny bit slower but won't need to add a .clear() to new vectors 
- He asked if i could sent an unlisted youtube recording of me showing the simulation as teams screenshare isn't good for animation.
	- sent one and got some feedback 

MEETING 14/03/2024
- look at emaila nd write up